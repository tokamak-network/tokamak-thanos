name: Check Go lint

on:
  push:
jobs:
  go-mod-download:
    runs-on: ubuntu-latest
    container:
      image: onthertech/titan-ci-builder:latest
    env:
      file: go.sum
      key: gomod
    steps:
    - uses: actions/checkout@v4.1.0
    - name: Restore cache
      uses: actions/cache@v3.3.2
      with:
        key: ${{ env.key }}-{{ checksum "${{ env.file }}" }}
        path: "/go/pkg/mod"
    - name: Download Go module dependencies
      run: go mod download
  go-mod-tidy:
    runs-on: ubuntu-latest
    container:
      image: onthertech/titan-ci-builder:latest
    needs:
    - go-mod-download
    steps:
    - uses: actions/checkout@v4.1.0
    - name: Add repository to git safe directories
      run: git config --global --add safe.directory $GITHUB_WORKSPACE
    - name: Restore cache
      uses: actions/cache@v3.3.2
      with:
        key: gomod-{{ checksum "go.sum" }}
        path: "/go/pkg/mod"

    - name: Go mod tidy
      run: make mod-tidy && git diff --exit-code
  go-lint:
    runs-on: ubuntu-latest
    container:
      image: onthertech/titan-ci-builder:latest
    needs:
    - go-mod-tidy
    steps:
    - uses: actions/checkout@v4.1.0
    - name: Print golangci-lint version
      run: golangci-lint --version
    - name: Restore cache
      uses: actions/cache@v3.3.2
      with:
        key: gomod-{{ checksum "go.sum" }}
        path: "/go/pkg/mod"
    - name: restore_cache
      uses: actions/cache@v3.3.2
      with:
        key: Golang build cache
        path: "/root/.cache/go-build"
    - name: Restore golangci-lint cache
      uses: actions/cache@v3.3.2
      with:
        key: golang-lint-cache
        path: "/root/.cache/golangci-lint"
    - name: run Go linter
      run: |-
        # Identify how many cores it defaults to
        golangci-lint --help | grep concurrency
        make lint-go
      working-directory: "."
name: Contracts Bedrock Workflow

on:
  push:
    branches:
      - main

jobs:
  contracts-bedrock-coverage:
    runs-on: ubuntu-latest
    container:
      image: onthertech/titan-ci-builder:latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Check changed
        run: |
          cd ops/check-changed
          pip3 install -r requirements.txt
          python3 main.py "contracts-bedrock,op-node"

      - name: Print Forge Version
        run: |
          cd packages/contracts-bedrock
          forge --version

      - name: Test and Generate Coverage
        run: |
          cd packages/contracts-bedrock
          pnpm coverage:lcov
        timeout-minutes: 18
        env:
          FOUNDRY_PROFILE: ci

      - name: Upload Coverage
        run: |
          cd packages/contracts-bedrock
          codecov --verbose --clean --flags contracts-bedrock-tests
        env:
          FOUNDRY_PROFILE: ci

  contracts-bedrock-tests:
    runs-on: ubuntu-latest
    container:
      image: onthertech/titan-ci-builder:latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Check changed
        run: |
          cd ops/check-changed
          pip3 install -r requirements.txt
          python3 main.py "contracts-bedrock,op-node"

      - name: Print Forge Version
        run: |
          cd packages/contracts-bedrock
          forge --version

      - name: Run Tests
        run: |
          cd packages/contracts-bedrock
          pnpm test
        timeout-minutes: 15
        env:
          FOUNDRY_PROFILE: ci

  contracts-bedrock-checks:
    needs: ['build']
    runs-on: ubuntu-latest
    container:
      image: onthertech/titan-ci-builder:latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Restore PNPM Package Cache
        run: |
          pnpm install -g pnpm
          pnpm install --frozen-lockfile --prefer-offline
      - name: Check changed
        run: |
          cd ops/check-changed
          pip3 install -r requirements.txt
          python3 main.py "contracts-bedrock,op-node"

      - name: Install Dependencies
        run: |
          pnpm install --frozen-lockfile --prefer-offline

      - name: Build Contracts
        run: |
          pnpm build
        working-directory: packages/contracts-bedrock

      - name: Lint
        run: |
          pnpm lint:check || echo "export LINT_STATUS=1" >> "$BASH_ENV"
        working-directory: packages/contracts-bedrock

      - name: Gas Snapshot
        run: |
          forge --version
          pnpm gas-snapshot --check || echo "export GAS_SNAPSHOT_STATUS=1" >> "$BASH_ENV"
        env:
          FOUNDRY_PROFILE: ci
        working-directory: packages/contracts-bedrock
        timeout-minutes: 15

      - name: Storage Snapshot
        run: |
          pnpm storage-snapshot
          git diff --exit-code .storage-layout || echo "export STORAGE_SNAPSHOT_STATUS=1" >> "$BASH_ENV"
        working-directory: packages/contracts-bedrock

      - name: Semver Lock
        run: |
          pnpm semver-lock
          git diff --exit-code semver-lock.json || echo "export SEMVER_LOCK_STATUS=1" >> "$BASH_ENV"
        working-directory: packages/contracts-bedrock

      - name: Invariant Docs
        run: |
          pnpm autogen:invariant-docs
          git diff --exit-code ./invariant-docs/*.md || echo "export INVARIANT_DOCS_STATUS=1" >> "$BASH_ENV"
        working-directory: packages/contracts-bedrock

      - name: Check Deploy Configs
        run: |
          pnpm validate-deploy-configs || echo "export DEPLOY_CONFIGS_STATUS=1" >> "$BASH_ENV"
        working-directory: packages/contracts-bedrock

      - name: Check Statuses
        run: |
          if [[ "$LINT_STATUS" -ne 0 ]]; then
            FAILED=1
            echo "Linting failed, see job output for details."
          fi
          if [[ "$GAS_SNAPSHOT_STATUS" -ne 0 ]]; then
            FAILED=1
            echo "Gas snapshot failed, see job output for details."
          fi
          if [[ "$STORAGE_SNAPSHOT_STATUS" -ne 0 ]]; then
            echo "Storage snapshot failed, see job output for details."
            FAILED=1
          fi
          if [[ "$SEMVER_LOCK_STATUS" -ne 0 ]]; then
            echo "Semver lock failed, see job output for details."
            FAILED=1
          fi
          if [[ "$INVARIANT_DOCS_STATUS" -ne 0 ]]; then
            echo "Invariant docs failed, see job output for details."
            FAILED=1
          fi
          if [[ "$DEPLOY_CONFIGS_STATUS" -ne 0 ]]; then
            echo "Deploy config check failed, see job output for details."
            FAILED=1
          fi
          if [[ "$FAILED" -ne 0 ]]; then
            exit 1
          fi

  contracts-bedrock-slither:
    runs-on: ubuntu-latest
    container:
      image: onthertech/titan-ci-builder:latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Check changed
        run: |
          cd ops/check-changed
          pip3 install -r requirements.txt
          python3 main.py "contracts-bedrock"

      - name: Run Slither
        run: |
          slither --version && pnpm slither || echo "Slither failed"

  contracts-bedrock-validate-spaces:
    needs: ['build']
    runs-on: ubuntu-latest
    container:
      image: onthertech/titan-ci-builder:latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Restore PNPM Package Cache
        run: |
          pnpm install -g pnpm
          pnpm install --frozen-lockfile --prefer-offline

      - name: Install Dependencies
        run: |
          pnpm install --frozen-lockfile --prefer-offline

      - name: Check changed
        run: |
          cd ops/check-changed
          pip3 install -r requirements.txt
          python3 main.py "contracts-bedrock"

      - name: Validate Spacers
        run: |
          cd packages/contracts-bedrock
          pnpm validate-spacers

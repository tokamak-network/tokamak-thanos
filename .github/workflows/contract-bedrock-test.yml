name: 'Contract Bedrock Test'
on:
  push:
    paths:
      - 'packages/contracts-bedrock/**'
      - 'op-node/**'
jobs:
  start-runners:
    strategy:
      matrix:
        number: [0, 1]
    name: Start EC2 Runner
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2
      - name: Start EC2 runner
        id: start-ec2-runner
        uses: machulav/ec2-github-runner@v2
        with:
          mode: start
          github-token: ${{ secrets.ACCESS_TOKEN }}
          ec2-image-id: ami-01bd9dc38789ab007
          ec2-instance-type: t4g.2xlarge
          subnet-id: subnet-4aa53021
          security-group-id: sg-03165a21a3ba6e8b3
      - name: Runner status
        id: status
        run: |
          echo "Runner label:" ${{ steps.start-ec2-runner.outputs.label }}
          echo "EC2 instances id:" ${{ steps.start-ec2-runner.outputs.ec2-instance-id }}
      - uses: cloudposse/github-action-matrix-outputs-write@main
        id: out
        with:
          matrix-step-name: ${{ github.job }}
          matrix-key: ${{ matrix.number }}
          outputs: |-
            label: ${{ steps.start-ec2-runner.outputs.label }}
            ec2-instance-id: ${{ steps.start-ec2-runner.outputs.ec2-instance-id }}

  runners:
    name: EC2 Runner
    needs: [start-runners]
    runs-on: ubuntu-latest
    outputs:
      result: ${{ steps.read.outputs.result }}
    steps:
      - uses: cloudposse/github-action-matrix-outputs-read@main
        id: read
        with:
          matrix-step-name: start-runners

  stop-runners:
    name: Stop self-hosted EC2 runners
    strategy:
      matrix:
        number: [0, 1]
    needs: [runners, contracts-bedrock-tests, contracts-bedrock-coverage]
    runs-on: ubuntu-latest
    if: ${{ always() }} # required to stop the runner even if the error happened in the previous jobs
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Stop EC2 runner
        uses: machulav/ec2-github-runner@v2
        with:
          mode: stop
          github-token: ${{ secrets.ACCESS_TOKEN }}
          label: ${{ fromJson(needs.runners.outputs.result).label[format('{0}', matrix.number)] }}
          ec2-instance-id: ${{ fromJson(needs.runners.outputs.result).ec2-instance-id[format('{0}', matrix.number)] }}

  contracts-bedrock-tests:
    name: "Contract bedrock test"
    needs: [runners]
    runs-on: ${{ fromJson(needs.runners.outputs.result).label[format('{0}', matrix.number)] }}
    strategy:
      matrix:
        number: [0]
    container:
      image: onthertech/titan-ci-builder:latest
    steps:
    - uses: actions/checkout@v4.1.0
    - name: Fetch dependencies
      run: pnpm fetch --frozen-lockfile --prefer-offline
    - name: Install dependencies
      run: pnpm install --frozen-lockfile --offline
    - name: print forge version
      run: forge --version
      working-directory: packages/contracts-bedrock
    - name: run tests
      run: pnpm test
      working-directory: packages/contracts-bedrock

  contracts-bedrock-coverage:
    name: "Contract bedrock coverage"
    needs: [runners]
    runs-on: ${{ fromJson(needs.runners.outputs.result).label[format('{0}', matrix.number)] }}
    strategy:
      matrix:
        number: [0, 1]
    container:
      image: onthertech/titan-ci-builder:latest
    steps:
    - uses: actions/checkout@v4.1.0
     # Declares the repository safe and not under dubious ownership.
    - name: Add repository to git safe directories
      run: git config --global --add safe.directory $GITHUB_WORKSPACE
    - name: restore_cache
      uses: actions/cache@v3.3.2
      with:
       key: pnpm-packages-v2-{{ checksum "pnpm-lock.yaml" }}
       path: node_modules
       restore-keys: pnpm-packages-v2-{{ checksum "pnpm-lock.yaml" }}
    - name: Fetch dependencies
      run: pnpm fetch --frozen-lockfile --prefer-offline
    - name: Install dependencies
      run: pnpm install --frozen-lockfile --offline
    - name: print forge version
      run: forge --version
      working-directory: packages/contracts-bedrock
    - name: test and generate coverage
      run: pnpm coverage:lcov
      working-directory: packages/contracts-bedrock
      env:
        FOUNDRY_PROFILE: ci
    - name: upload coverage
      run: codecov --verbose --clean --flags contracts-bedrock-tests
      env:
        FOUNDRY_PROFILE: ci
name: Check JS lint

on:
  push:
    paths:

jobs:
  pnpm-monorepo:
    runs-on: ubuntu-latest
    container:
      image: onthertech/titan-ci-builder:latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # Declares the repository safe and not under dubious ownership.
      - name: Add repository to git safe directories
        run: git config --global --add safe.directory $GITHUB_WORKSPACE

      - name: Restore PNPM Package Cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: pnpm-packages-v2-${{ hashFiles('pnpm-lock.yaml') }}

      - name: Fetch dependencies
        run: pnpm fetch --frozen-lockfile --prefer-offline

      - name: Save PNPM Package Cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: pnpm-packages-v2-${{ hashFiles('pnpm-lock.yaml') }}

      - name: Install dependencies
        run: pnpm install --frozen-lockfile --offline

      - name: Print forge version
        run: forge --version

  js-lint-test:
    runs-on: ubuntu-latest
    needs: [pnpm-monorepo]
    container:
      image: onthertech/titan-ci-builder:latest
    name: js-lint-test-${{matrix.params.name}}

    strategy:
      matrix:
        params: [
          {
            name: 'common-ts-tests',
            package_name: 'packages/common-ts',
            coverage_flag: 'common-ts-tests'
          },
          {
            name: 'core-utils-tests',
            package_name: 'packages/core-utils'
          },
          {
            name: 'chain-mon-tests',
            package_name: 'packages/chain-mon',
            dependencies: '(common-ts|contracts-bedrock|core-utils|sdk)'
          },
          {
            name: 'contracts-ts-tests',
            package_name: 'packages/contracts-ts',
            dependencies: '(contracts-bedrock|contracts-ts)'
          },
          {
            name: 'sdk-next-tests',
            package_name: 'packages/sdk',
            dependencies: '(common-ts|contracts-bedrock|core-utils)'
          }
        ]

    env:
      package_name: ${{ matrix.params.package_name }}
      dependencies: ${{ matrix.params.dependencies }}
      coverage_flag: ${{ matrix.params.coverage_flag }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Add repository to git safe directories
        run: git config --global --add safe.directory $GITHUB_WORKSPACE

      - name: Restore PNPM Package Cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: pnpm-packages-v2-${{ hashFiles('pnpm-lock.yaml') }}

      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            packages:
              - "${{ env.package_name }}/**"
      - if: steps.changes.outputs.packages == 'true'
        run: |
          pnpm install --frozen-lockfile --prefer-offline
          cd packages/${{ env.package_name }}
          pnpm lint && git diff --exit-code

